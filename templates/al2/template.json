{
  "_comment": "All template variables are enumerated here; and most variables have a default value defined in a variables.json for each kubernetes minor version",
  "variables": {
  "additional_yum_repos": "",
  "ami_component_description": "(k8s: {{ user `kubernetes_version` }}, containerd: {{ user `containerd_version` }})",
  "ami_description": "EKS Kubernetes Worker AMI with AmazonLinux2 image",
  "ami_name": null,
  "ami_regions": "",
  "ami_users": "",
  "arch": "x86_64",
  "associate_public_ip_address": "",
  "aws_access_key_id": "{{env `AWS_ACCESS_KEY_ID`}}",
  "aws_region": "ap-southeast-2",
  "aws_secret_access_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
  "aws_session_token": "{{env `AWS_SESSION_TOKEN`}}",
  "binary_bucket_name": "amazon-eks",
  "binary_bucket_region": "us-west-2",
  "cache_container_images": "false",
  "cni_plugin_version": "v1.2.0",
  "containerd_version": "1.7.11-1.amzn2.0.1",
  "creator": "{{env `USER`}}",
  "docker_version": "25.0.5-1.amzn2",
  "enable_fips": "false",
  "encrypted": "false",
  "kernel_version": "5.10.225-213.878.amzn2",
  "kms_key_id": "",
  "kubernetes_build_date": "2024-09-10",
  "kubernetes_version": "1.28.13",
  "iam_instance_profile": "",
  "instance_type": "m5.large",
  "launch_block_device_mappings_volume_size": "64",
  "pause_container_version": "3.5",
  "pull_cni_from_github": "true",
  "remote_folder": "/home/ec2-user/temp",
  "runc_version": "1.1.13-1.amzn2",
  "security_group_id": null,
  "source_ami_filter_name": "CIS Amazon Linux 2 Kernel 5.10 Benchmark - Level 1*",
  "source_ami_id": "",
  "source_ami_owners": "679593333241",
  "ssh_interface": "",
  "ssh_username": "ec2-user",
  "ssm_agent_version": "",
  "vpc-id":"vpc-030f08ad8846f6519",
  "subnet_id":"subnet-0665e77385dfa4c55",
  "temporary_security_group_source_cidrs": "192.168.134.128/25",
  "user_data_file": null,
  "volume_type": "gp2",
  "working_dir": "{{user `remote_folder`}}/worker"
    },
  "builders": [
    {
      "type": "amazon-ebs",
      "region": "{{user `aws_region`}}",
      "source_ami": "{{user `source_ami_id`}}",
      "ami_users": "{{user `ami_users`}}",
      "snapshot_users": "{{user `ami_users`}}",
      "source_ami_filter": {
        "filters": {
          "name": "{{user `source_ami_filter_name`}}",
          "architecture": "{{user `arch`}}",
          "root-device-type": "ebs",
          "state": "available",
          "virtualization-type": "hvm"
        },
        "owners": [
          "{{user `source_ami_owners`}}"
        ],
        "most_recent": true
      },
      "instance_type": "{{user `instance_type`}}",
      "launch_block_device_mappings": [
        {
          "device_name": "/dev/xvda",
          "volume_type": "{{user `volume_type`}}",
          "volume_size": "{{user `launch_block_device_mappings_volume_size`}}",
          "encrypted": true,
          "delete_on_termination": true
        }
      ],
      "ami_block_device_mappings": [
        {
          "device_name": "/dev/xvda",
          "volume_type": "{{user `volume_type`}}",
          "volume_size": 20,
          "delete_on_termination": true
        }
      ],
      "aws_polling": {
        "delay_seconds": 30,
        "max_attempts": 480
      },
      "ami_regions": "{{user `ami_regions`}}",
      "iam_instance_profile": "{{user `iam_instance_profile`}}",
      "ssh_username": "{{user `ssh_username`}}",
      "ssh_interface": "{{user `ssh_interface`}}",
      "temporary_security_group_source_cidrs": "{{user `temporary_security_group_source_cidrs`}}",
      "security_group_id": "{{user `security_group_id`}}",
      "associate_public_ip_address": "{{user `associate_public_ip_address`}}",
      "ssh_pty": true,
      "encrypt_boot": "{{user `encrypted`}}",
      "kms_key_id": "{{user `kms_key_id`}}",
      "run_tags": {
        "creator": "{{user `creator`}}",
        "Name": "{{user `ami_name`}}",
        "Release": "latest",
        "Type": "eks",
        "Application": "{{user `ami_description`}}",
        "OwnerEmail": "mebankawssupport.in@capgemini.com",
        "ProjectCode": "P162",
        "Availability": "24x7",
        "Service": "CSP",
        "docker_version": "{{user `docker_version`}}",
        "containerd_version": "{{user `containerd_version`}}",
        "runtime": "{{user `runtime`}}",
        "kubernetes": "{{user `kubernetes_version`}}/{{user `kubernetes_build_date`}}/bin/linux/{{user `arch`}}",
        "cni_plugin_version": "{{user `cni_plugin_version`}}"   
      },
      "subnet_id": "{{user `subnet_id`}}",
      "tags": {
        "Name": "{{user `ami_name`}}",
        "created": "{{timestamp}}",
        "Release": "latest",
        "Type": "eks",
        "Application": "{{user `ami_description`}}",
        "OwnerEmail": "mebankawssupport.in@capgemini.com",
        "ProjectCode": "P162",
        "Availability": "24x7",
        "Service": "CSP",
        "build_region": "{{ .BuildRegion }}",
        "source_ami_id": "{{ .SourceAMI }}",
        "source_ami_name": "{{ .SourceAMIName }}",
        "docker_version": "{{ user `docker_version`}}",
        "containerd_version": "{{ user `containerd_version`}}",
        "kubernetes": "{{ user `kubernetes_version`}}/{{ user `kubernetes_build_date` }}/bin/linux/{{user `arch`}}",
        "cni_plugin_version": "{{ user `cni_plugin_version`}}",
        "ssm_agent_version": "{{ user `ssm_agent_version`}}"
      },
      "run_volume_tags": {
       "Name": "{{user `ami_name`}}",
        "Release": "latest",
        "Type": "eks",
        "Application": "{{user `ami_description`}}",
        "OwnerEmail": "mebankawssupport.in@capgemini.com",
        "ProjectCode": "P162",
        "Availability": "24x7",
        "Service": "CSP",
        "docker_version": "{{user `docker_version`}}",
        "containerd_version": "{{user `containerd_version`}}",
        "kubernetes": "{{user `kubernetes_version`}}/{{user `kubernetes_build_date`}}/bin/linux/{{user `arch`}}",
        "cni_plugin_version": "{{user `cni_plugin_version`}}"
      },
      "ami_name": "{{user `ami_name`}}",
      "ami_description": "{{ user `ami_description` }}, {{ user `ami_component_description` }}",
      "metadata_options": {
        "http_tokens": "required"
      },
      "user_data_file": "{{user `user_data_file`}}"
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "inline": [
        "mkdir -p {{user `working_dir`}}",
        "mkdir -p {{user `working_dir`}}/log-collector-script"
      ],
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/install-additional-repos.sh",
      "environment_vars": [
        "ADDITIONAL_YUM_REPOS={{user `additional_yum_repos`}}"
      ],
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    },
    {
      "type": "file",
      "source": "{{template_dir}}/../shared/runtime/",
      "destination": "{{user `working_dir`}}"
    },
    {
      "type": "file",
      "source": "{{template_dir}}/runtime/",
      "destination": "{{user `working_dir`}}"
    },
    {
      "type": "file",
      "source": "{{template_dir}}/../../log-collector-script/linux/",
      "destination": "{{user `working_dir`}}/log-collector-script/"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "inline": [
        "sudo chmod -R a+x {{user `working_dir`}}/bin/",
        "sudo mv {{user `working_dir`}}/bin/* /usr/bin/"
      ],
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/upgrade-kernel.sh",
      "environment_vars": [
        "KUBERNETES_VERSION={{user `kubernetes_version`}}",
        "KERNEL_VERSION={{user `kernel_version`}}"
      ],
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/enable-fips.sh",
      "environment_vars": [
        "ENABLE_FIPS={{user `enable_fips`}}"
      ],
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "inline": ["sudo reboot"],
      "expect_disconnect": true,
      "pause_after": "90s",
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/install-worker.sh",
      "environment_vars": [
        "AWS_ACCESS_KEY_ID={{user `aws_access_key_id`}}",
        "AWS_SECRET_ACCESS_KEY={{user `aws_secret_access_key`}}",
        "AWS_SESSION_TOKEN={{user `aws_session_token`}}",
        "BINARY_BUCKET_NAME={{user `binary_bucket_name`}}",
        "BINARY_BUCKET_REGION={{user `binary_bucket_region`}}",
        "CACHE_CONTAINER_IMAGES={{user `cache_container_images`}}",
        "CNI_PLUGIN_VERSION={{user `cni_plugin_version`}}",
        "CONTAINERD_VERSION={{user `containerd_version`}}",
        "DOCKER_VERSION={{user `docker_version`}}",
        "KUBERNETES_BUILD_DATE={{user `kubernetes_build_date`}}",
        "KUBERNETES_VERSION={{user `kubernetes_version`}}",
        "PAUSE_CONTAINER_VERSION={{user `pause_container_version`}}",
        "PULL_CNI_FROM_GITHUB={{user `pull_cni_from_github`}}",
        "RUNC_VERSION={{user `runc_version`}}",
        "SSM_AGENT_VERSION={{user `ssm_agent_version`}}",
        "WORKING_DIR={{user `working_dir`}}"
      ],
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/../shared/provisioners/cleanup.sh",
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/cleanup-additional-repos.sh",
      "environment_vars": [
        "ADDITIONAL_YUM_REPOS={{user `additional_yum_repos`}}"
      ],
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/provisioners/validate.sh",
      "environment_vars": [
        "KERNEL_VERSION={{user `kernel_version`}}"
      ],
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "script": "{{template_dir}}/../shared/provisioners/generate-version-info.sh",
      "execute_command": "chmod +x {{ .Path }}; {{ .Path }} {{user `working_dir`}}/version-info.json",
      "environment_vars": [
        "CACHE_CONTAINER_IMAGES={{user `cache_container_images`}}"
      ]
    },
    {
      "type": "file",
      "direction": "download",
      "source": "{{user `working_dir`}}/version-info.json",
      "destination": "{{ user `ami_name` }}-version-info.json"
    },
    {
      "type": "shell",
      "remote_folder": "{{ user `remote_folder`}}",
      "inline": [
        "rm -rf {{user `working_dir`}}"
      ],
      "execute_command": "echo 'packer' | {{.Vars}} bash -eux '{{.Path}}'"
    }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true,
      "custom_data": {
        "source_ami_name": "{{ build `SourceAMIName` }}",
        "source_ami_id": "{{ build `SourceAMI` }}"
      }
    },
    {
      "type": "manifest",
      "output": "{{user `ami_name`}}-manifest.json",
      "strip_path": true,
      "custom_data": {
        "source_ami_name": "{{ build `SourceAMIName` }}",
        "source_ami_id": "{{ build `SourceAMI` }}"
      }
    }
  ]
}
